name: Build and Deploy Pipeline

on:
  push:
    branches:
      - main

jobs:
  proof_html:
    name: Proof HTML
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Proof HTML
        uses: anishathalye/proof-html@v1.1.0
        with:
          directory: ./

  sonar_analysis:
    name: Sonar Analysis
    runs-on: self-hosted
    #needs: proof_html # skip this requirement for now as we dont have vaild html yet
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full clone for accurate analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  dockerize:
    name: Build Docker Image and Push to Registry
    runs-on: self-hosted
    needs: sonar_analysis
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ contains(github.ref, 'refs/heads/development') || contains(github.ref, 'refs/heads/main') && format('{0}/dev-{1}', secrets.DOCKERHUB_USERNAME, github.event.repository.name) }}:${{ github.sha }}
            ${{ contains(github.ref, 'refs/heads/development') || contains(github.ref, 'refs/heads/main') && format('{0}/dev-{1}', secrets.DOCKERHUB_USERNAME, github.event.repository.name) }}:latest
            ${{ (contains(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix')) && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, github.event.repository.name) }}:${{ github.sha }}
            ${{ (contains(github.ref, 'refs/heads/release') || startsWith(github.ref, 'refs/heads/hotfix')) && format('{0}/{1}', secrets.DOCKERHUB_USERNAME, github.event.repository.name) }}:latest

